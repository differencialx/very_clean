version: '3.1'

volumes:
  redis:
  postgres:
  assets:
  gems:
  node_modules:

services:
  db:
    image: postgres:9.6
    expose:
      - 5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: very_clean_development
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]

  in_memory_store:
    image: redis:4.0-alpine
    expose:
      - 6379
    volumes:
      - redis:/var/lib/redis/data
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "ping"]

  server_app: &server_app
    build: .
    command: bundle exec rails s -p 3000 -b '0.0.0.0'
    entrypoint: "./docker-entrypoint.sh"
    volumes:
      - ./:/home/www/very_clean/
      - gems:/usr/local/bundle
      - node_modules:/home/www/very_clean/node_modules
    tty: true
    stdin_open: true
    environment:
      RAILS_ENV: development
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: very_clean_development
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      REDIS_DB: "redis://in_memory_store:6379"
      SECRET_KEY_BASE: STUB
      DEVISE_SECRET_KEY: STUB
    depends_on:
      - db
      - in_memory_store
    ports:
      - 3000:3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]

  server_worker_app:
    <<: *server_app
    command: bundle exec sidekiq -C config/sidekiq.yml -p 3001
    entrypoint: ''
    depends_on:
      - db
      - server_app
      - in_memory_store
    ports:
      - 3001:3001
    healthcheck:
      test: ["CMD-SHELL", "ps ax | grep -v grep | grep sidekiq || exit 1"]
